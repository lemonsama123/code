import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.HashSet;

public class Main {

	public static void main(String[] args) throws NumberFormatException, IOException {
		// TODO Auto-generated method stub
		int t = nextInt();
		boolean[] num = new boolean[1e18+1];
		
	}

//	#include <bitsdc++.h>
//	using namespace std;
//	typedef long long ll;
//
//	int main()
//	{
//	    int t;
//	    cin >> t;
//	    vector<bool> num(1e18+1);
//	    num[1] = true;
//	    num[2] = true;
//	    num[3] = false;
//	    num[4] = true;
//	    num[5] = true;
//	    for (ll i=4; i <= 1e18; ++i)
//	    {
//	        num[i] = !num[i-1] | !num[i-2];
//	    }
//	    while (t--)
//	    {
//	        ll n;
//	        cin >> n;
//	        if (num[n])
//	            cout<<"so sad!\n";
//	        else
//	            cout<<"good team!\n";
//	    }
//	}
//	
	static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
	static BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));

	static int[] nextLine() throws IOException {
		String[] str = reader.readLine().split(" ");
		int[] res = new int[str.length];
		for (int i = 0; i < res.length; ++i) {
			res[i] = Integer.parseInt(str[i]);
		}
		return res;
	}

	static void print(Object arg) throws IOException {
		writer.write(String.valueOf(arg));
	}

	static int nextInt() throws NumberFormatException, IOException {
		return Integer.parseInt(reader.readLine());
	}

	static void printf(String str, Object... args) throws IOException {
		writer.write(String.format(str, args));
	}

	static void close() throws IOException {
		writer.flush();
		writer.close();
		reader.close();
	}
}
